#!/usr/bin/env python3n"""nPRP (Product Requirement Prompt) RunnernExecutes PRPs with AI assistance for consistent code generation.n"""nnimport sysnimport osnimport argparsenimport subprocessnfrom pathlib import Pathnndef read_prp_file(prp_path):n    """Read and parse PRP file."""n    try:n        with open(prp_path, 'r', encoding='utf-8') as f:n            return f.read()n    except FileNotFoundError:n        print(f"Error: PRP file '{prp_path}' not found.")n        sys.exit(1)n    except Exception as e:n        print(f"Error reading PRP file: {e}")n        sys.exit(1)nndef validate_prp_structure(prp_content):n    """Validate PRP has required sections."""n    required_sections = [n        "## Overview",n        "## Requirements", n        "## All Needed Context",n        "## Implementation Notes"n    ]n    n    missing_sections = []n    for section in required_sections:n        if section not in prp_content:n            missing_sections.append(section)n    n    if missing_sections:n        print("Warning: PRP missing required sections:")n        for section in missing_sections:n            print(f"  - {section}")n        return Falsen    return Truenndef run_with_ai(prp_content, ai_tool="claude"):n    """Execute PRP with AI tool."""n    print("üöÄ Executing PRP with AI assistance...")n    print("=" * 50)n    n    # For Claude, you would integrate with their APIn    # For now, we'll just display the PRP contentn    print(prp_content)n    print("=" * 50)n    print("üìù AI execution complete. Review the generated code above.")n    print("üí° Tip: Copy the generated code to your project files.")nndef main():n    parser = argparse.ArgumentParser(description="Run PRP with AI assistance")n    parser.add_argument("prp_file", help="Path to PRP file")n    parser.add_argument("--ai-tool", default="claude", help="AI tool to use")n    parser.add_argument("--validate-only", action="store_true", help="Only validate PRP structure")n    n    args = parser.parse_args()n    n    # Read PRP filen    prp_content = read_prp_file(args.prp_file)n    n    # Validate structuren    if not validate_prp_structure(prp_content):n        if args.validate_only:n            print("‚ùå PRP validation failed.")n            sys.exit(1)n        else:n            print("‚ö†Ô∏è  Continuing despite validation warnings...")n    n    if args.validate_only:n        print("‚úÖ PRP validation passed.")n        returnn    n    # Execute with AIn    run_with_ai(prp_content, args.ai_tool)nnif __name__ == "__main__":n    main()